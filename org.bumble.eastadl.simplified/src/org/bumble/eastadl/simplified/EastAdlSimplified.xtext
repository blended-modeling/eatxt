// automatically generated by Xtext
grammar org.bumble.eastadl.simplified.EastAdlSimplified with org.eclipse.xtext.xbase.Xbase
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase

import "http://east-adl.info/2.2.0" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

EAXML returns EAXML:
    {EAXML}
    'EAXML'
    BEGIN
        ('topLevelPackage' BEGIN topLevelPackage+=EAPackage ( "," topLevelPackage+=EAPackage)* END )?
    END;


Comment returns Comment:
    Comment_Impl | Rationale;

EAPackageableElement returns EAPackageableElement:
    DesignLevel | AnalysisFunctionType_Impl | BasicSoftwareFunctionType | DesignFunctionType_Impl | FunctionalDevice | FunctionClientServerInterface | HardwareFunctionType | LocalDeviceManager | Actuator | ElectricalComponent | HardwareComponentType_Impl | Node | Sensor | ArrayDatatype | CompositeDatatype | EABoolean | EANumerical | EAString | Enumeration | Quantity | RangeableValueType | Unit | UserAttributeDefinition | UserAttributedElement | UserElementType;

TraceableSpecification returns TraceableSpecification:
    FunctionClientServerInterface | ArrayDatatype | CompositeDatatype | EABoolean | EANumerical | EAString | Enumeration | RangeableValueType;

Relationship returns Relationship:
    Realization;






FunctionPort returns FunctionPort:
    FunctionClientServerPort | FunctionFlowPort | FunctionPowerPort;



HardwareComponentType returns HardwareComponentType:
    HardwareComponentType_Impl | Actuator | ElectricalComponent | Node | Sensor;

HardwarePin returns HardwarePin:
    CommunicationHardwarePin | IOHardwarePin | PowerHardwarePin;



PortConnector returns PortConnector:
    HardwarePortConnector | LogicalPortConnector;

EADatatype returns EADatatype:
    ArrayDatatype | CompositeDatatype | EABoolean | EANumerical | EAString | Enumeration | RangeableValueType;


    
EString returns ecore::EString:
    STRING | ID;



EAValue returns EAValue:
    EAArrayValue | EABooleanValue | EACompositeValue | EAEnumerationValue | EAExpression | EANumericalValue | EAStringValue;


Identifiable returns Identifiable:
    DesignLevel | Allocation | AnalysisFunctionPrototype | AnalysisFunctionType_Impl | BasicSoftwareFunctionType | DesignFunctionPrototype | DesignFunctionType_Impl | FunctionalDevice | FunctionAllocation | FunctionClientServerInterface | FunctionClientServerPort | FunctionConnector | FunctionFlowPort | FunctionPowerPort | HardwareFunctionType | LocalDeviceManager | Operation | PortGroup | Actuator | CommunicationHardwarePin | ElectricalComponent | HardwareComponentPrototype | HardwareComponentType_Impl | HardwareConnector | HardwarePort | HardwarePortConnector | IOHardwarePin | LogicalPortConnector | Node | PowerHardwarePin | Sensor | EAPackage | Realization | ArrayDatatype | CompositeDatatype | EABoolean | EADatatypePrototype | EANumerical | EAString | Enumeration | EnumerationLiteral | Quantity | RangeableValueType | Unit | UserAttributeDefinition | UserAttributedElement | UserElementType;



DesignFunctionType returns DesignFunctionType:
    DesignFunctionType_Impl | BasicSoftwareFunctionType | HardwareFunctionType | LocalDeviceManager;



EAElement returns EAElement:
    DesignLevel | Allocation | AnalysisFunctionPrototype | AnalysisFunctionType_Impl | BasicSoftwareFunctionType | DesignFunctionPrototype | DesignFunctionType_Impl | FunctionalDevice | FunctionAllocation | FunctionClientServerInterface | FunctionClientServerPort | FunctionConnector | FunctionFlowPort | FunctionPowerPort | HardwareFunctionType | LocalDeviceManager | Operation | PortGroup | Actuator | CommunicationHardwarePin | ElectricalComponent | HardwareComponentPrototype | HardwareComponentType_Impl | HardwareConnector | HardwarePort | HardwarePortConnector | IOHardwarePin | LogicalPortConnector | Node | PowerHardwarePin | Sensor | EAPackage | Realization | ArrayDatatype | CompositeDatatype | EABoolean | EADatatypePrototype | EANumerical | EAString | Enumeration | EnumerationLiteral | Quantity | RangeableValueType | Unit | UserAttributeDefinition | UserAttributedElement | UserElementType;

AnalysisFunctionType returns AnalysisFunctionType:
    AnalysisFunctionType_Impl | FunctionalDevice;








AllocateableElement returns AllocateableElement:
    DesignFunctionPrototype | FunctionClientServerPort | FunctionConnector | FunctionFlowPort | FunctionPowerPort;

AllocationTarget returns AllocationTarget:
    CommunicationHardwarePin | HardwareComponentPrototype | HardwarePort | HardwarePortConnector | IOHardwarePin | LogicalPortConnector | PowerHardwarePin;

FunctionPrototype returns FunctionPrototype:
    AnalysisFunctionPrototype | DesignFunctionPrototype;

EAPackage returns EAPackage:
    'EAPackage'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('subPackage' BEGIN subPackage+=EAPackage ( "," subPackage+=EAPackage)* END )?
        ('element' BEGIN element+=EAPackageableElement ( "," element+=EAPackageableElement)* END )?
    END;

Identifier returns String:
    EString /* TODO: implement this rule and an appropriate IValueConverter */;

String0 returns String:
    EString /* TODO: implement this rule and an appropriate IValueConverter */;

Comment_Impl returns Comment:
    'Comment'
    BEGIN
        'body' body=String0
    END;

Rationale returns Rationale:
    'Rationale'
    BEGIN
        'body' body=String0
    END;

DesignLevel returns DesignLevel:
    'DesignLevel'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('allocation' BEGIN allocation+=Allocation ( "," allocation+=Allocation)* END )?
        ('functionalDesignArchitecture' functionalDesignArchitecture=DesignFunctionPrototype)?
        ('hardwareDesignArchitecture' hardwareDesignArchitecture=HardwareComponentPrototype)?
    END;

AnalysisFunctionType_Impl returns AnalysisFunctionType:
    'AnalysisFunctionType'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('isElementary' isElementary=Boolean)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('portGroup' BEGIN portGroup+=PortGroup ( "," portGroup+=PortGroup)* END )?
        ('connector' BEGIN connector+=FunctionConnector ( "," connector+=FunctionConnector)* END )?
        ('port' BEGIN port+=FunctionPort ( "," port+=FunctionPort)* END )?
        ('part' BEGIN part+=AnalysisFunctionPrototype ( "," part+=AnalysisFunctionPrototype)* END )?
    END;

BasicSoftwareFunctionType returns BasicSoftwareFunctionType:
    'BasicSoftwareFunctionType'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('isElementary' isElementary=Boolean)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('portGroup' BEGIN portGroup+=PortGroup ( "," portGroup+=PortGroup)* END )?
        ('connector' BEGIN connector+=FunctionConnector ( "," connector+=FunctionConnector)* END )?
        ('port' BEGIN port+=FunctionPort ( "," port+=FunctionPort)* END )?
        ('part' BEGIN part+=DesignFunctionPrototype ( "," part+=DesignFunctionPrototype)* END )?
    END;

DesignFunctionType_Impl returns DesignFunctionType:
    'DesignFunctionType'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('isElementary' isElementary=Boolean)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('portGroup' BEGIN portGroup+=PortGroup ( "," portGroup+=PortGroup)* END )?
        ('connector' BEGIN connector+=FunctionConnector ( "," connector+=FunctionConnector)* END )?
        ('port' BEGIN port+=FunctionPort ( "," port+=FunctionPort)* END )?
        ('part' BEGIN part+=DesignFunctionPrototype ( "," part+=DesignFunctionPrototype)* END )?
    END;

FunctionalDevice returns FunctionalDevice:
    'FunctionalDevice'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('isElementary' isElementary=Boolean)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('portGroup' BEGIN portGroup+=PortGroup ( "," portGroup+=PortGroup)* END )?
        ('connector' BEGIN connector+=FunctionConnector ( "," connector+=FunctionConnector)* END )?
        ('port' BEGIN port+=FunctionPort ( "," port+=FunctionPort)* END )?
        ('part' BEGIN part+=AnalysisFunctionPrototype ( "," part+=AnalysisFunctionPrototype)* END )?
    END;

FunctionClientServerInterface returns FunctionClientServerInterface:
    'FunctionClientServerInterface'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('text' text=String0)?
        ('uri' uri=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('operation' BEGIN operation+=Operation ( "," operation+=Operation)* END )?
    END;

HardwareFunctionType returns HardwareFunctionType:
    'HardwareFunctionType'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('isElementary' isElementary=Boolean)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('hardwareComponent' hardwareComponent=[HardwareComponentType|EString])?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('portGroup' BEGIN portGroup+=PortGroup ( "," portGroup+=PortGroup)* END )?
        ('connector' BEGIN connector+=FunctionConnector ( "," connector+=FunctionConnector)* END )?
        ('port' BEGIN port+=FunctionPort ( "," port+=FunctionPort)* END )?
        ('part' BEGIN part+=DesignFunctionPrototype ( "," part+=DesignFunctionPrototype)* END )?
    END;

LocalDeviceManager returns LocalDeviceManager:
    'LocalDeviceManager'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('isElementary' isElementary=Boolean)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('portGroup' BEGIN portGroup+=PortGroup ( "," portGroup+=PortGroup)* END )?
        ('connector' BEGIN connector+=FunctionConnector ( "," connector+=FunctionConnector)* END )?
        ('port' BEGIN port+=FunctionPort ( "," port+=FunctionPort)* END )?
        ('part' BEGIN part+=DesignFunctionPrototype ( "," part+=DesignFunctionPrototype)* END )?
    END;

Actuator returns Actuator:
    'Actuator'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('pin' BEGIN pin+=HardwarePin ( "," pin+=HardwarePin)* END )?
        ('part' BEGIN part+=HardwareComponentPrototype ( "," part+=HardwareComponentPrototype)* END )?
        ('connector' BEGIN connector+=HardwareConnector ( "," connector+=HardwareConnector)* END )?
        ('port' BEGIN port+=HardwarePort ( "," port+=HardwarePort)* END )?
        ('portConnector' BEGIN portConnector+=PortConnector ( "," portConnector+=PortConnector)* END )?
    END;

ElectricalComponent returns ElectricalComponent:
    'ElectricalComponent'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('isActive' isActive=Boolean)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('pin' BEGIN pin+=HardwarePin ( "," pin+=HardwarePin)* END )?
        ('part' BEGIN part+=HardwareComponentPrototype ( "," part+=HardwareComponentPrototype)* END )?
        ('connector' BEGIN connector+=HardwareConnector ( "," connector+=HardwareConnector)* END )?
        ('port' BEGIN port+=HardwarePort ( "," port+=HardwarePort)* END )?
        ('portConnector' BEGIN portConnector+=PortConnector ( "," portConnector+=PortConnector)* END )?
    END;

HardwareComponentType_Impl returns HardwareComponentType:
    'HardwareComponentType'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('pin' BEGIN pin+=HardwarePin ( "," pin+=HardwarePin)* END )?
        ('part' BEGIN part+=HardwareComponentPrototype ( "," part+=HardwareComponentPrototype)* END )?
        ('connector' BEGIN connector+=HardwareConnector ( "," connector+=HardwareConnector)* END )?
        ('port' BEGIN port+=HardwarePort ( "," port+=HardwarePort)* END )?
        ('portConnector' BEGIN portConnector+=PortConnector ( "," portConnector+=PortConnector)* END )?
    END;

Node returns Node:
    'Node'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('executionRate' executionRate=Float)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('pin' BEGIN pin+=HardwarePin ( "," pin+=HardwarePin)* END )?
        ('part' BEGIN part+=HardwareComponentPrototype ( "," part+=HardwareComponentPrototype)* END )?
        ('connector' BEGIN connector+=HardwareConnector ( "," connector+=HardwareConnector)* END )?
        ('port' BEGIN port+=HardwarePort ( "," port+=HardwarePort)* END )?
        ('portConnector' BEGIN portConnector+=PortConnector ( "," portConnector+=PortConnector)* END )?
    END;

Sensor returns Sensor:
    'Sensor'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('traceableSpecification' '(' traceableSpecification+=[TraceableSpecification|EString] ( "," traceableSpecification+=[TraceableSpecification|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('ownedRelationship' BEGIN ownedRelationship+=Relationship ( "," ownedRelationship+=Relationship)* END )?
        ('pin' BEGIN pin+=HardwarePin ( "," pin+=HardwarePin)* END )?
        ('part' BEGIN part+=HardwareComponentPrototype ( "," part+=HardwareComponentPrototype)* END )?
        ('connector' BEGIN connector+=HardwareConnector ( "," connector+=HardwareConnector)* END )?
        ('port' BEGIN port+=HardwarePort ( "," port+=HardwarePort)* END )?
        ('portConnector' BEGIN portConnector+=PortConnector ( "," portConnector+=PortConnector)* END )?
    END;

ArrayDatatype returns ArrayDatatype:
    'ArrayDatatype'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('text' text=String0)?
        ('uri' uri=String0)?
        ('maxLength' maxLength=Integer)?
        ('minLength' minLength=Integer)?
        'elementType' elementType=[EADatatype|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

CompositeDatatype returns CompositeDatatype:
    'CompositeDatatype'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('text' text=String0)?
        ('uri' uri=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        'datatypePrototype' BEGIN datatypePrototype+=EADatatypePrototype ( "," datatypePrototype+=EADatatypePrototype)* END 
    END;

EABoolean returns EABoolean:
    'EABoolean'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('text' text=String0)?
        ('uri' uri=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

EANumerical returns EANumerical:
    'EANumerical'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('text' text=String0)?
        ('uri' uri=String0)?
        ('max' max=Numerical)?
        ('min' min=Numerical)?
        ('unit' unit=[Unit|EString])?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

EAString returns EAString:
    'EAString'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('text' text=String0)?
        ('uri' uri=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

Enumeration returns Enumeration:
    'Enumeration'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('text' text=String0)?
        ('uri' uri=String0)?
        'isMultiValued' isMultiValued=Boolean
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        'literal' BEGIN literal+=EnumerationLiteral ( "," literal+=EnumerationLiteral)* END 
    END;

Quantity returns Quantity:
    'Quantity'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'amountOfSubstanceExp' amountOfSubstanceExp=Integer
        'electricCurrentExp' electricCurrentExp=Integer
        'lengthExp' lengthExp=Integer
        'luminousIntensityExp' luminousIntensityExp=Integer
        'massExp' massExp=Integer
        'thermodynamicTemperatureExp' thermodynamicTemperatureExp=Integer
        'timeExp' timeExp=Integer
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

RangeableValueType returns RangeableValueType:
    'RangeableValueType'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('text' text=String0)?
        ('uri' uri=String0)?
        'accuracy' accuracy=Float
        'resolution' resolution=Float
        ('significantDigits' significantDigits=Integer)?
        'baseRangeable' baseRangeable=[EANumerical|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

Unit returns Unit:
    'Unit'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'factor' factor=Float
        'symbol' symbol=String0
        'offset' offset=Float
        ('reference' reference=[Unit|EString])?
        ('quantity' quantity=[Quantity|EString])?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

UserAttributeDefinition returns UserAttributeDefinition:
    'UserAttributeDefinition'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'type' type=[EADatatype|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('defaultValue' defaultValue=EAValue)?
    END;

UserAttributedElement returns UserAttributedElement:
    'UserAttributedElement'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('uaType' '(' uaType+=[UserElementType|EString] ( "," uaType+=[UserElementType|EString])* ')' )?
        'attributedElement' attributedElement=[Identifiable|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('uaValue' BEGIN uaValue+=EAValue ( "," uaValue+=EAValue)* END )?
    END;

UserElementType returns UserElementType:
    'UserElementType'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('validFor' validFor=String0)?
        'key' key=String0
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('uaDefinition' BEGIN uaDefinition+=UserAttributeDefinition ( "," uaDefinition+=UserAttributeDefinition)* END )?
    END;

Allocation returns Allocation:
    'Allocation'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('functionAllocation' BEGIN functionAllocation+=FunctionAllocation ( "," functionAllocation+=FunctionAllocation)* END )?
    END;

DesignFunctionPrototype returns DesignFunctionPrototype:
    'DesignFunctionPrototype'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'type' type=[DesignFunctionType|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

HardwareComponentPrototype returns HardwareComponentPrototype:
    'HardwareComponentPrototype'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'type' type=[HardwareComponentType|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

Realization returns Realization:
    'Realization'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        'realized' BEGIN realized+=Realization_realized ( "," realized+=Realization_realized)* END 
        'realizedBy' BEGIN realizedBy+=Realization_realizedBy ( "," realizedBy+=Realization_realizedBy)* END 
    END;

Realization_realized returns Realization_realized:
    'Realization_realized'
    BEGIN
        'identifiable_target' identifiable_target=[EAElement|EString]
        ('identifiable_context' '(' identifiable_context+=[EAElement|EString] ( "," identifiable_context+=[EAElement|EString])* ')' )?
    END;

Realization_realizedBy returns Realization_realizedBy:
    'Realization_realizedBy'
    BEGIN
        'identifiable_target' identifiable_target=[Identifiable|EString]
        ('identifiable_context' '(' identifiable_context+=[Identifiable|EString] ( "," identifiable_context+=[Identifiable|EString])* ')' )?
    END;

AnalysisFunctionPrototype returns AnalysisFunctionPrototype:
    'AnalysisFunctionPrototype'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'type' type=[AnalysisFunctionType|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

FunctionAllocation returns FunctionAllocation:
    'FunctionAllocation'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        'allocatedElement' allocatedElement=FunctionAllocation_allocatedElement
        'target' target=FunctionAllocation_target
    END;

FunctionClientServerPort returns FunctionClientServerPort:
    'FunctionClientServerPort'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'kind' kind=ClientServerKind
        'type' type=[FunctionClientServerInterface|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

FunctionConnector returns FunctionConnector:
    'FunctionConnector'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        'port' BEGIN port+=FunctionConnector_port ( "," port+=FunctionConnector_port)* END 
    END;

FunctionFlowPort returns FunctionFlowPort:
    'FunctionFlowPort'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'direction' direction=EADirectionKind
        'type' type=[EADatatype]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('defaultValue' defaultValue=EAValue)?
    END;

FunctionPowerPort returns FunctionPowerPort:
    'FunctionPowerPort'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'type' type=[CompositeDatatype|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

Operation returns Operation:
    'Operation'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('return' return=EADatatypePrototype)?
        ('argument' BEGIN argument+=EADatatypePrototype ( "," argument+=EADatatypePrototype)* END )?
    END;

PortGroup returns PortGroup:
    'PortGroup'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('port' '(' port+=[FunctionPort|EString] ( "," port+=[FunctionPort|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('portGroup' BEGIN portGroup+=PortGroup ( "," portGroup+=PortGroup)* END )?
    END;

CommunicationHardwarePin returns CommunicationHardwarePin:
    'CommunicationHardwarePin'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('direction' direction=EADirectionKind)?
        ('isGround' isGround=Boolean)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

HardwareConnector returns HardwareConnector:
    'HardwareConnector'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        'port' BEGIN port+=HardwareConnector_port ( "," port+=HardwareConnector_port)* END 
    END;

HardwarePort returns HardwarePort:
    'HardwarePort'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('isShield' isShield=Boolean)?
        ('referencedPin' '(' referencedPin+=[HardwarePin|EString] ( "," referencedPin+=[HardwarePin|EString])* ')' )?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        ('containedPin' BEGIN containedPin+=HardwarePin ( "," containedPin+=HardwarePin)* END )?
        ('containedPort' BEGIN containedPort+=HardwarePort ( "," containedPort+=HardwarePort)* END )?
    END;

HardwarePortConnector returns HardwarePortConnector:
    'HardwarePortConnector'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        'port' BEGIN port+=HardwarePortConnector_port ( "," port+=HardwarePortConnector_port)* END 
        ('connector' BEGIN connector+=HardwareConnector ( "," connector+=HardwareConnector)* END )?
    END;

IOHardwarePin returns IOHardwarePin:
    'IOHardwarePin'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('direction' direction=EADirectionKind)?
        ('isGround' isGround=Boolean)?
        ('kind' kind=IOHardwarePinKind)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

LogicalPortConnector returns LogicalPortConnector:
    'LogicalPortConnector'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('kind' kind=HardwareBusKind)?
        ('busSpeed' busSpeed=Float)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
        'port' BEGIN port+=HardwarePortConnector_port ( "," port+=HardwarePortConnector_port)* END 
    END;

PowerHardwarePin returns PowerHardwarePin:
    'PowerHardwarePin'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('direction' direction=EADirectionKind)?
        ('isGround' isGround=Boolean)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

EADatatypePrototype returns EADatatypePrototype:
    'EADatatypePrototype'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        'type' type=[EADatatype|EString]
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

EnumerationLiteral returns EnumerationLiteral:
    'EnumerationLiteral'
    BEGIN
        'shortName' shortName=Identifier
        ('category' category=Identifier)?
        ('uuid' uuid=String0)?
        ('name' name=String0)?
        ('ownedComment' BEGIN ownedComment+=Comment ( "," ownedComment+=Comment)* END )?
    END;

FunctionAllocation_allocatedElement returns FunctionAllocation_allocatedElement:
    'FunctionAllocation_allocatedElement'
    BEGIN
        ('allocateableElement_context' '(' allocateableElement_context+=[AllocateableElement|EString] ( "," allocateableElement_context+=[AllocateableElement|EString])* ')' )?
        'allocateableElement' allocateableElement=[AllocateableElement|EString]
    END;

FunctionAllocation_target returns FunctionAllocation_target:
    'FunctionAllocation_target'
    BEGIN
        ('allocationTarget_context' '(' allocationTarget_context+=[AllocationTarget|EString] ( "," allocationTarget_context+=[AllocationTarget|EString])* ')' )?
        'allocationTarget' allocationTarget=[AllocationTarget|EString]
    END;

enum ClientServerKind returns ClientServerKind:
                client = 'client' | server = 'server';

FunctionConnector_port returns FunctionConnector_port:
    'FunctionConnector_port'
    BEGIN
        ('functionPrototype' functionPrototype=[FunctionPrototype|EString])?
        'functionPort' functionPort=[FunctionPort|EString]
    END;

enum EADirectionKind returns EADirectionKind:
                in = 'in' | inout = 'inout' | out = 'out';

EAArrayValue returns EAArrayValue:
    'EAArrayValue'
    BEGIN
        'type' type=[EADatatype|EString]
        ('value' BEGIN value+=EAValue ( "," value+=EAValue)* END )?
    END;

EABooleanValue returns EABooleanValue:
    'EABooleanValue'
    BEGIN
        'value' value=Boolean
        'type' type=[EADatatype|EString]
    END;

EACompositeValue returns EACompositeValue:
    'EACompositeValue'
    BEGIN
        'type' type=[EADatatype|EString]
        'value' BEGIN value+=EAValue ( "," value+=EAValue)* END 
    END;

EAEnumerationValue returns EAEnumerationValue:
    'EAEnumerationValue'
    BEGIN
        'type' type=[EADatatype|EString]
        'value' '(' value+=[EnumerationLiteral|EString] ( "," value+=[EnumerationLiteral|EString])* ')' 
    END;

EAExpression returns EAExpression:
    'EAExpression'
    BEGIN
        'type' type=[EADatatype|EString]
        ('value' BEGIN value+=EAValue ( "," value+=EAValue)* END )?
    END;

EANumericalValue returns EANumericalValue:
    'EANumericalValue'
    BEGIN
        'value' value=Numerical
        'type' type=[EADatatype|EString]
    END;

EAStringValue returns EAStringValue:
    'EAStringValue'
    BEGIN
        'value' value=String0
        'type' type=[EADatatype|EString]
    END;

Boolean returns Boolean:
    'Boolean' /* TODO: implement this rule and an appropriate IValueConverter */;

Numerical returns Numerical:
    'Numerical' /* TODO: implement this rule and an appropriate IValueConverter */;

HardwareConnector_port returns HardwareConnector_port:
    'HardwareConnector_port'
    BEGIN
        'hardwarePin' hardwarePin=[HardwarePin|EString]
        ('hardwareComponentPrototype' hardwareComponentPrototype=[HardwareComponentPrototype|EString])?
    END;

HardwarePortConnector_port returns HardwarePortConnector_port:
    'HardwarePortConnector_port'
    BEGIN
        'hardwarePort' hardwarePort=[HardwarePort|EString]
        ('hardwareComponentPrototype' hardwareComponentPrototype=[HardwareComponentPrototype|EString])?
    END;

enum IOHardwarePinKind returns IOHardwarePinKind:
                digital = 'digital' | analog = 'analog' | pwm = 'pwm' | other = 'other';

enum HardwareBusKind returns HardwareBusKind:
                TimeTriggered = 'TimeTriggered' | EventTriggered = 'EventTriggered' | TimeAndEventTriggered = 'TimeAndEventTriggered' | other = 'other';

Float returns Float:
    'Float' /* TODO: implement this rule and an appropriate IValueConverter */;

Integer returns Integer:
    'Integer' /* TODO: implement this rule and an appropriate IValueConverter */;

// We modify the concrete syntax of the Xbase block expression and make them indentation-aware
@Override
XBlockExpression returns xbase::XExpression:
    {xbase::XBlockExpression}
    BEGIN
        (expressions+=XExpressionOrVarDeclaration ';'?)*
    END;
    
// The following synthetic tokens are used for the indentation-aware blocks
terminal BEGIN: 'synthetic:BEGIN';  // increase indentation
terminal END: 'synthetic:END';      // decrease indentation