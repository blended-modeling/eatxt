/*
 * generated by Xtext 2.25.0
 */
package org.bumble.eastadl.simplified.formatting2

import org.eclipse.eatop.eastadl22.EAElement
import org.eclipse.eatop.eastadl22.EAPackageableElement
import org.eclipse.eatop.eastadl22.Eastadl22Package
import org.eclipse.eatop.eastadl22.Identifiable
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.XBlockExpression
import org.eclipse.xtext.xbase.XExpression
import org.eclipse.xtext.xbase.formatting2.XbaseFormatter

class EastAdlSimplifiedFormatter extends XbaseFormatter {
	override dispatch void format(XBlockExpression expr, extension IFormattableDocument document) {
		expr.surround[indent]
		for (child : expr.expressions) {
			child.append[newLine]
			child.format
		}
	}

	override protected void formatBody(XExpression expr, boolean forceMultiline, extension IFormattableDocument doc) {
		if (expr === null)
			return;
		if (expr instanceof XBlockExpression) {
			expr.prepend[newLine]
		} else if (forceMultiline || expr.previousHiddenRegion.isMultiline) {
			expr.prepend[newLine].surround[indent]
		} else {
			expr.prepend[oneSpace]
		}
		expr.format
	}

	override protected void formatBodyInline(XExpression expr, boolean forceMultiline,
		extension IFormattableDocument doc) {
		if (expr === null)
			return;
		if (expr instanceof XBlockExpression) {
			expr.surround[newLine]
		} else if (forceMultiline || expr.previousHiddenRegion.isMultiline) {
			expr.prepend[newLine].surround[indent].append[newLine]
		} else {
			expr.surround[oneSpace]
		}
		expr.format
	}

	override protected void formatBodyParagraph(XExpression expr, extension IFormattableDocument doc) {
		if (expr === null)
			return;
		if (expr instanceof XBlockExpression) {
			expr.surround[newLine]
		} else {
			expr.surround[oneSpace]
		}
		expr.format
	}
	
	def dispatch void format(EAElement obj, extension IFormattableDocument doc) {
		if (obj === null) {
			return;
		}
		obj.append[newLine]
		obj.regionFor.feature(Eastadl22Package.eINSTANCE.getEAElement_Name()).surround[indent].append[newLine]  
		if (obj instanceof Identifiable) {
			obj.regionFor.feature(Eastadl22Package.eINSTANCE.getIdentifiable_Category()).surround[indent].append[newLine]
			obj.regionFor.feature(Eastadl22Package.eINSTANCE.getIdentifiable_Uuid()).surround[indent].append[newLine]
		}	
		obj.eContents.forEach[format]
	}
	
	def dispatch void format(EAPackageableElement obj, extension IFormattableDocument doc) {
		if (obj === null) {
			return;
		}
		obj.surround[indent].prepend[newLine]
		obj.eContents.forEach[format]
	}

}
