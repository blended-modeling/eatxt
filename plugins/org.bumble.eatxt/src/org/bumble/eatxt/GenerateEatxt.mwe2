module org.bumble.eatxt.GenerateEatxt

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."
var testPath = "${rootPath}/../tests/org.bumble.eatxt.tests"
var idePath = "${rootPath}/org.bumble.eatxt.ide"

Workflow {
	
	bean = EatxtMWE2MetaModelRegistrar {}
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.bumble.eatxt"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
					root = testPath
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
					root = testPath
				}
				genericIde = {
					enabled = true
					root = idePath
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "org.bumble.eatxt.Eatxt"
			fileExtensions = "eatxt"
			referencedResource = "platform:/resource/org.eclipse.eatop.eastadl22/model/eastadl22.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}
			fragment = formatting2.EatxtFormatter2Fragment auto-inject {
				generateStub = true
				generateXtendStub = true
			}

			formatter = {
				generateStub = false
				generateXtendStub = true
			}
			
			parserGenerator = {
				options = {
					classSplitting = true
				}
			}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			fileWizard = {
				generate = true
			}
			generator = {
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
	}
}
